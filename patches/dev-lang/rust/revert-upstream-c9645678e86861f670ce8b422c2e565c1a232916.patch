diff -Nuar rustc-1.33.0-src.orig/src/libunwind/build.rs rustc-1.33.0-src/src/libunwind/build.rs
--- rustc-1.33.0-src.orig/src/libunwind/build.rs	2019-02-28 09:53:34.000000000 +0100
+++ rustc-1.33.0-src/src/libunwind/build.rs	2019-04-07 02:45:17.171680446 +0200
@@ -5,11 +5,7 @@
     let target = env::var("TARGET").expect("TARGET was not set");
 
     if target.contains("linux") {
-        if target.contains("musl") {
-            // musl is handled in lib.rs
-        } else if !target.contains("android") {
-            println!("cargo:rustc-link-lib=gcc_s");
-        }
+        println!("cargo:rustc-link-lib=static-nobundle=unwind");
     } else if target.contains("freebsd") {
         println!("cargo:rustc-link-lib=gcc_s");
     } else if target.contains("rumprun") {
diff -Nuar rustc-1.33.0-src.orig/src/libunwind/lib.rs rustc-1.33.0-src/src/libunwind/lib.rs
--- rustc-1.33.0-src.orig/src/libunwind/lib.rs	2019-04-07 02:43:32.659686227 +0200
+++ rustc-1.33.0-src/src/libunwind/lib.rs	2019-04-07 02:45:41.267679113 +0200
@@ -2,7 +2,6 @@
 #![unstable(feature = "panic_unwind", issue = "32837")]
 
 #![cfg_attr(stage0, feature(cfg_target_vendor))]
-#![feature(link_cfg)]
 #![feature(nll)]
 #![feature(staged_api)]
 #![feature(unwind_attributes)]
@@ -24,7 +23,3 @@
         pub use libunwind::*;
     }
 }
-
-#[cfg(target_env = "musl")]
-#[link(name = "unwind", kind = "static-nobundle")]
-extern {}
