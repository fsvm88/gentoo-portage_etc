diff -Nuar tbb-2019_U8.orig/src/tbbmalloc/proxy.cpp tbb-2019_U8/src/tbbmalloc/proxy.cpp
--- tbb-2019_U8.orig/src/tbbmalloc/proxy.cpp	2019-06-06 12:29:15.000000000 +0200
+++ tbb-2019_U8/src/tbbmalloc/proxy.cpp	2019-08-31 21:41:08.918843168 +0200
@@ -24,7 +24,8 @@
 // of aligned_alloc as required by new C++ standard, this makes it hard to
 // redefine aligned_alloc here. However, running on systems with new libc
 // version, it still needs it to be redefined, thus tricking system headers
-#if defined(__GLIBC_PREREQ) && !__GLIBC_PREREQ(2, 16) && _GLIBCXX_HAVE_ALIGNED_ALLOC
+#if defined(__GLIBC_PREREQ)
+#if !__GLIBC_PREREQ(2, 16) && _GLIBCXX_HAVE_ALIGNED_ALLOC
 // tell <cstdlib> that there is no aligned_alloc
 #undef _GLIBCXX_HAVE_ALIGNED_ALLOC
 // trick <stdlib.h> to define another symbol instead
@@ -32,6 +33,7 @@
 // Fix the state and undefine the trick
 #include <cstdlib>
 #undef aligned_alloc
+#endif
 #endif // defined(__GLIBC_PREREQ)&&!__GLIBC_PREREQ(2, 16)&&_GLIBCXX_HAVE_ALIGNED_ALLOC
 #endif // __linux__ && !__ANDROID__
 
