diff -Nuar musl-1.1.20.orig/include/pthread.h musl-1.1.20/include/pthread.h
--- musl-1.1.20.orig/include/pthread.h	2018-09-04 19:17:19.000000000 +0200
+++ musl-1.1.20/include/pthread.h	2019-01-13 21:19:08.388112590 +0100
@@ -215,6 +215,7 @@
 int pthread_setaffinity_np(pthread_t, size_t, const struct cpu_set_t *);
 int pthread_getattr_np(pthread_t, pthread_attr_t *);
 int pthread_setname_np(pthread_t, const char *);
+int pthread_getname_np(pthread_t, char *, size_t);
 int pthread_getattr_default_np(pthread_attr_t *);
 int pthread_setattr_default_np(const pthread_attr_t *);
 int pthread_tryjoin_np(pthread_t, void **);
diff -Nuar musl-1.1.20.orig/src/thread/pthread_getname_np.c musl-1.1.20/src/thread/pthread_getname_np.c
--- musl-1.1.20.orig/src/thread/pthread_getname_np.c	1970-01-01 01:00:00.000000000 +0100
+++ musl-1.1.20/src/thread/pthread_getname_np.c	2019-01-13 21:17:46.820117102 +0100
@@ -0,0 +1,25 @@
+#define _GNU_SOURCE
+#include <fcntl.h>
+#include <string.h>
+#include <unistd.h>
+#include <sys/prctl.h>
+
+#include "pthread_impl.h"
+
+int pthread_getname_np(pthread_t thread, char *name, size_t len)
+{
+	int fd, cs, status = 0;
+	char f[sizeof "/proc/self/task//comm" + 3*sizeof(int)];
+
+	if ((len = strnlen(name, 16)) > 15) return ERANGE;
+
+	if (thread == pthread_self())
+		return prctl(PR_GET_NAME, (unsigned long)name) ? errno : 0;
+
+	snprintf(f, sizeof f, "/proc/self/task/%d/comm", thread->tid);
+	pthread_setcancelstate(PTHREAD_CANCEL_DISABLE, &cs);
+	if ((fd = open(f, O_RDONLY)) < 0 || read(fd, name, len) < 0) status = errno;
+	if (fd >= 0) close(fd);
+	pthread_setcancelstate(cs, 0);
+	return status;
+}
