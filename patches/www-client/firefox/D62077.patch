diff --git a/js/src/gc/WeakMap-inl.h b/js/src/gc/WeakMap-inl.h
--- a/js/src/gc/WeakMap-inl.h
+++ b/js/src/gc/WeakMap-inl.h
@@ -148,15 +148,18 @@
   JSRuntime* rt = zone()->runtimeFromAnyThread();
   CellColor keyColor = gc::detail::GetEffectiveColor(rt, key);
   JSObject* delegate = gc::detail::GetDelegate(key);
+
   if (delegate) {
     CellColor delegateColor = gc::detail::GetEffectiveColor(rt, delegate);
-    if (keyColor < delegateColor) {
-      gc::AutoSetMarkColor autoColor(*marker, delegateColor);
+    // The key needs to stay alive while both the delegate and map are live.
+    CellColor proxyPreserveColor = std::min(delegateColor, mapColor);
+    if (keyColor < proxyPreserveColor) {
+      gc::AutoSetMarkColor autoColor(*marker, proxyPreserveColor);
       TraceWeakMapKeyEdge(marker, zone(), &key,
                           "proxy-preserved WeakMap entry key");
-      MOZ_ASSERT(key->color() >= delegateColor);
+      MOZ_ASSERT(key->color() >= proxyPreserveColor);
       marked = true;
-      keyColor = delegateColor;
+      keyColor = proxyPreserveColor;
     }
   }
 
diff --git a/js/src/jit-test/tests/gc/weak-marking-03.js b/js/src/jit-test/tests/gc/weak-marking-03.js
--- a/js/src/jit-test/tests/gc/weak-marking-03.js
+++ b/js/src/jit-test/tests/gc/weak-marking-03.js
@@ -552,9 +552,9 @@
   showmarks();
   marks = getMarks();
   assertEq(marks[0], "gray", "map is gray");
-  assertEq(marks[1], "black", "key inherits black even though in gray marking");
+  assertEq(marks[1], "gray", "delegate marks key but map is gray, so key gets gray");
   assertEq(marks[2], "black", "delegate is still black");
-  assertEq(marks[3], "gray", "gray map + black key => gray value");
+  assertEq(marks[3], "gray", "gray map + gray key => gray value");
 
   clearMarkQueue();
   clearMarkObservers();

